from zad2.RBTree import RBTree
from zad2.RBNode import RBNode
import random

tree = RBTree()
print(tree.minimum(tree.root))
tree.insert("beta")
tree.insert("maku")
tree.insert("maku")
tree.insert("maku")
tree.insert("ptaku")
tree.insert("ptaku")
tree.insert("Asia")
tree.insert("zaku")
tree.delete("ptaku")

#tree.load('../slowa.txt', '\n')
with open('../slowa.txt', 'r') as file:
    text = file.read().splitlines()
    random.shuffle(text)
    for element in text:
        tree.insert(element)

with open('../slowa.txt', 'r') as file:
    text = file.read().splitlines()
    random.shuffle(text)
    for element in text:
        tree.delete(element)

tree.find("ptaku")
tree.find("ptakudsadasadsadsdsadas")
tree.delete("maku")
print(*tree.in_order_walk(tree.root))

# tree.insert(RBNode("jamnik"))
# print(tree.find_node("maku69"))
# print(tree.root.value)
# tree.insert(RBNode("maku"))
# tree.insert(RBNode("walczi"))
# print(tree.root.value, tree.root.color, tree.root.right.value, tree.root.right.color, tree.root.left.value, tree.root.left.color,
#       tree.root.left.left.color)
# tree.insert(RBNode("raku"))
# tree.insert(RBNode("saku"))
# tree.insert(RBNode("2134ch4uj2137"))
# tree.insert(RBNode("xDDDDD"))
# tree.insert(RBNode("zajaczek"))
# tree.insert(RBNode("gno lel"))
#
# tree.delete("jamnik")
# tree.delete("jamnik")
#print(tree.in_order_walk(tree.root))
# print(tree.minimum(tree.root).value)
# print(tree.maximum(tree.root).value)
# print(tree.find("Maku"))
# tree.delete("walczi")
# print(tree.root.right.left.right.value)
# print(*tree.in_order_walk(tree.root))
# print(tree.successor(tree.find_node("walczi")))
# print(tree.find("maku"))
# print("Tree")
# print(tree.root.value, tree.root.color)
# print(tree.root.left.value, tree.root.left.color)
# print(tree.root.right.value, tree.root.right.color)
# print(tree.root.left.left.value, tree.root.left.left.color)
# print(tree.root.right.left.value, tree.root.right.left.color)
# print(tree.root.right.right.value, tree.root.right.right.color)
# print(tree.root.right.right.right.value, tree.root.right.right.right.color)
# print("Black height check")
# tree.check_black_height()
#
# tree2 = RBTree()
# print(tree2.maximum(tree2.root))
# tree2.insert(RBNode("c"))
# tree2.insert(RBNode("a"))
# tree2.insert(RBNode("b"))
# tree2.insert(RBNode("ab"))
# print(*tree2.in_order_walk(tree2.root))
# tree2.delete("a")
# print("Tree")
# print(tree2.root.parent)
# print(tree2.root.value, tree2.root.color)
# print(tree2.root.left.value, tree2.root.left.color)
# print(tree2.root.right.value, tree2.root.right.color)
# print(tree2.root.left.left.value, tree2.root.left.left.color)
# print(tree2.root.left.right.value, tree2.root.left.right.color)
# print(tree2.root.right.left.value, tree2.root.right.left.color)
# print(tree2.root.right.right.value, tree2.root.right.right.color)
# tree2.delete("b")
# tree2.delete("walczi")
# tree2.delete("ab")
# tree2.delete("c")
# tree2.delete("c")
# print(*tree2.in_order_walk(tree2.root))
# print(tree2.maximum(tree2.root).value)
# tree2.load("../sample", RBNode)
# tree2.find_node("three")
# tree2.delete("three")
# tree2.find_node("three")
# tree2.find_node("three")
# tree2.find_node("Three")
# tree2.delete("Three")
# tree2.find_node("Three")
# tree2.minimum(tree2.root)
